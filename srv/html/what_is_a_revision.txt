Here's an analogy that should help understand exactly what a revision is.
Imagine each row of your keyboard.  Think of each of these as being a separate
"file".  A revision doesn't deal with this "file", but rather with a smaller
unit, like a single key.  Here are some example revisions for our keyboard:

Revision 1 - Swap the 'U' and 'I' keys and remove the little bump from the 'J'
             key. (Issue: 100)
Revision 2 - Change the 'Q' key to a ':)' key. (Issue: 101)
Revision 3 - Change the 'U' key to a latin 'μ'. (Issue: 102)

Now if we look at this in terms of "files", we can see that all 3 revisions
modify the 'qwerty' file, and revision 1 also modifies the 'asdf' file.  But we
don't want to think of these revisions in terms of the files they modify -
that's irrelevant.  All we care about is that a revision is a set of changes to
small bits of our keyboard ('project').

Now think about this keyboard as the development ('trunk') keyboard.  Imagine
we also have a production ('live') keyboard.  We can merge individual revisions
from the development keyboard onto our production keyboard, and we don't have
to do them in the same order.  Merging just revision 3 would leave us with a
normal keyboard except that the 'u' key would be a 'μ' key instead.  If we look
at the history of our development keyboard we never had a 'qwerty' 'file' that
looked like this new production keyboard.  By the time we had made revision 3,
we had also swapped the 'U' and 'I' keys and changed the 'Q' to a ':)' key in
that file.  Until those revisions are merged onto the production keyboard
though, the files will not look the same.

A common question that is asked is "The 'Q' key on production hasn't been
changed to a ':)'.  Can't I just make another change to the 'qwerty' file
(revision 4) and merge that to production to fix the 'Q' key?"  And the answer
is a resounding 'No'.  Revision 4 is it's own change to a small bit of the
keyboard.  It does not include the changes of any other revisions (i.e.
revision 2).  Merging revision 4 onto production would leave us with a
production keyboard that has the revision 3 and 4 changes, but would still be
missing the revision 1 and 2 changes.  Those changes can only be made on the
production keyboard by merging those revisions.
