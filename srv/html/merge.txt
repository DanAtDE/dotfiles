TRUNK ---1---2---3--------------------8--------
                     \           /        \
STAGING               4---------7          9---
                          \    /
QA                         5--6

Okay, so revisions 1,2,3 are committed by developer for an issue.

The issue is then staged and there is a conflict.  You manually resolve the conflict.
- The resulting revision 4 is remembered to merge issues 1,2 and 3.

The issue is then pushed to QA.
- This looks at all previous revisions, and finds revision 4 that merges them all.
- So it merges revision 5 onto QA that remembers is merges revision 4.
- There is no conflict here.

QA tests it and it fails so they merge it off of QA.
- This finds revision 5 and reverse merges it.
- Revision 6 therefore is remembered to UNmerge revision 5.
- No conflict.

It is then merged off of staging.
- Revision 6 does an unmerge and can be used to merge off of staging too.
- Revision 7 is remembered to merge revision 6.  It is therefore an UNmerge of revision 4.

Developer commits fix in revision 8.

It is then staged.
- ABS finds all revisions, decides that UNmerging revision 7 (aka merging revision 4) will take care of revisions 1-7.  Revision 8 can be merged on top of that.
- So Revision 9 is remembered to UNmerge 7 and merge 8.
- No conflict because the conflict resolution in 4 is also present in UNmerging 7.  As long as 8 doesn't bring any new conflicts in we are good!
